// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AcademicYear {
  id            String          @id @default(uuid())
  year          Int
  StudentProfil StudentProfil[]
}

//---------------------------------------------------------------------------------------------------------------//

model StudentProfil {
  id             Int            @id @default(autoincrement())
  foto           String?
  nama           String
  noIndukSiswa   String         @unique
  sekolah        String
  kelas          String
  jurusan        String
  alamat         String
  ttl            DateTime
  noTelp         String?
  email          String?        @unique
  namaAyah       String?
  namaIbu        String?
  noTelpAyah     String?
  noTelpIbu      String?
  namaWali       String?
  noTelpWali     String?
  keuanganId     Int?           @unique
  keuangan       Keuangan?      @relation(fields: [keuanganId], references: [id])
  absensi        Absensi?       @relation(fields: [absensiId], references: [id])
  absensiId      Int?           @unique
  nilaiId        Int?           @unique
  nilai          Nilai?         @relation(fields: [nilaiId], references: [id])
  pencapaian     Pencapaian?    @relation(fields: [pencapaianId], references: [id])
  pencapaianId   Int?           @unique
  mapelUmum      MapelUmum[]
  mapelJurusan   MapelJurusan[]
  users          Users[]
  academicYearId String?
  academicYear   AcademicYear?  @relation(fields: [academicYearId], references: [id])
}

//---------------------------------------------------------------------------------------------------------------//

model Keuangan {
  id              Int             @id @default(autoincrement())
  lastTransDate   DateTime
  referensi       String          @default("")
  noJurnal        String          @default("")
  deskripsi       String
  studentProfilId Int
  debit           Float           @default(0)
  kredit          Float           @default(0)
  total           Float           @default(0)
  studentProfil   StudentProfil[] @relation
}

//---------------------------------------------------------------------------------------------------------------//

// model Transaksi {
//   id              Int            @id @default(autoincrement())
//   keuanganId      Int
//   amount          Int
//   type            String
//   lastBalance     Int
//   deskripsi       String
//   transDate       DateTime
//   StudentProfil   StudentProfil? @relation(fields: [studentProfilId], references: [id])
//   studentProfilId Int?
// }

//---------------------------------------------------------------------------------------------------------------//

model Absensi {
  id              Int             @id @default(autoincrement())
  tanggal         DateTime
  status          String
  studentProfil   StudentProfil[] @relation
  studentProfilId Int?
}

//---------------------------------------------------------------------------------------------------------------//

model Nilai {
  id              Int             @id @default(autoincrement())
  skor            Float
  pelajaran       String
  studentProfil   StudentProfil[] @relation
  studentProfilId Int
}

//---------------------------------------------------------------------------------------------------------------//

model Pencapaian {
  id              Int             @id @default(autoincrement())
  judul           String
  deskripsi       String
  tanggal         DateTime
  studentProfil   StudentProfil[] @relation
  studentProfilId Int
}

//---------------------------------------------------------------------------------------------------------------//

model MapelUmum {
  id              Int            @id @default(autoincrement())
  namaMapel       String
  StudentProfil   StudentProfil? @relation(fields: [studentProfilId], references: [id])
  studentProfilId Int
}

//---------------------------------------------------------------------------------------------------------------//
model MapelJurusan {
  id              Int            @id @default(autoincrement())
  namaMapel       String
  StudentProfil   StudentProfil? @relation(fields: [studentProfilId], references: [id])
  studentProfilId Int
}

//---------------------------------------------------------------------------------------------------------------//
enum Role {
  STUDENT
  ADMIN
  ORANGTUA
}

model Users {
  id              Int            @id @default(autoincrement())
  username        String
  password        String
  studentProfilId Int?
  studentProfil   StudentProfil? @relation(fields: [studentProfilId], references: [id])
  role            Role?
}
